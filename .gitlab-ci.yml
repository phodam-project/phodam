variables:
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - build-container
  - lint-test
  - build
  - package

.version-7.4:
  image: ${CI_REGISTRY}/${CI_PROJECT_PATH}/php-7.4-build:latest
  variables:
    SOURCE_IMAGE: "php:7.4-cli"
    IMAGE_NAME: "php-7.4-build:latest"

.version-8.0:
  image: ${CI_REGISTRY}/${CI_PROJECT_PATH}/php-8.0-build:latest
  variables:
    SOURCE_IMAGE: "php:8.0-cli"
    IMAGE_NAME: "php-8.0-build:latest"

.version-8.1:
  image: ${CI_REGISTRY}/${CI_PROJECT_PATH}/php-8.1-build:latest
  variables:
    SOURCE_IMAGE: "php:8.1-cli"
    IMAGE_NAME: "php-8.1-build:latest"    
  
.build-container:
  stage: build-container
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:19.03.12
  tags:
    - docker
  variables:
    DOCKER_FILE: "build-container.Dockerfile"
  services:
    - name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:19.03.12-dind
      alias: docker
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - >
      docker build
      --build-arg "SOURCE_IMAGE=${SOURCE_IMAGE}"
      -t $CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_NAME
      -f $DOCKER_FILE .
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_NAME
  when: manual

build:7.4:
  extends:
    - .version-7.4
    - .build-container
    
build:8.0:
  extends:
    - .version-8.0
    - .build-container

build:8.1:
  extends:
    - .version-8.1
    - .build-container
    

.lint-test:
  stage: lint-test
  script:
    - composer install
    - composer run lint

lint:7.4:
  extends:
    - .lint-test
    - .version-7.4

lint:8.0:
  extends:
    - .lint-test
    - .version-7.4

lint:8.1:
  extends:
    - .lint-test
    - .version-7.4
